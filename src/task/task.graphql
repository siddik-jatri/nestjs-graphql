type Task {
  id: String!
  task: String!
  status: Boolean
  author: User!
}

type PaginateTasks {
  tasks: [Task]!
  count: Int!
  totalPages: Int!
  currentPage: Int!
}

input CreateTaskInput {
  task: String!
  status: Boolean
  author: String!
}

input UpdateTaskInput {
  id: String!
  task: String
  status: Boolean
  author: String
}

type Query {
  tasks(author: String, status: Boolean): [Task]!
  task(id: String!): Task
  paginateTasks(page: Int, limit: Int): PaginateTasks!
}

type Mutation {
  createTask(createTaskInput: CreateTaskInput!): Task!
  updateTask(updateTaskInput: UpdateTaskInput!): Task!
  removeTask(id: String!): Task
}
